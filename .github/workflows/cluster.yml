name: Clusters Actions
on:
  workflow_dispatch:
    inputs:
      cloud:
        description: 'Choose Cloud Provider'
        required: true
        type: choice
        default: Azure
        options:
          - Azure
          - AWS
          - GCP
      action:
        description: 'Action'
        required: false
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
      custom_cluster_descriptor:
        description: 'Custom Cluster Descriptor'
        required: true
        type: string
        default: 'aks/main.tfvars.example'

env:
  provider: ${{ inputs.cloud == 'Azure' && 'aks' || (inputs.cloud == 'AWS' && 'eks' || 'gke') }}

concurrency:
  group: ${{ inputs.cloud }}

jobs:
  cluster:
    name: "${{ inputs.action }} ${{ inputs.cloud }} cluster"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AKS credentials
        if: ${{ inputs.cloud == 'Azure' }}
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Configure AWS credentials
        if: ${{ inputs.cloud == 'AWS' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_CLUSTER_LOCATION }}

      - name: Authenticate into gcloud
        if: ${{ inputs.cloud == 'GCP' }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Install gcloud CLI
        if: ${{ inputs.cloud == 'GCP' }}
        uses: google-github-actions/setup-gcloud@v2.1.0

      - name: Install gcloud k8s auth component
        if: ${{ inputs.cloud == 'GCP' }}
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Create Terraform Cloud descriptors
        run: cp ${{ env.provider }}/terraform.cloud.tf.example ${{ env.provider }}/terraform.cloud.tf

      - name: Copy Terraform descriptor
        run: cp ${{ inputs.custom_cluster_descriptor }} ${{ env.provider }}/main.tfvars

      - name: AKS cluster ${{ inputs.action }}
        if: ${{ inputs.cloud == 'Azure' }}
        run: |
          cd aks
          terraform init
          terraform ${{ inputs.action }} \
            --var-file=main.tfvars \
            --var="cluster_location=${{ vars.AZURE_CLUSTER_LOCATION }}" \
            --var="cluster_machine_type=${{ vars.AZURE_CLUSTER_MACHINE_TYPE }}" \
            --auto-approve

      - name: EKS cluster ${{ inputs.action }}
        if: ${{ inputs.cloud == 'AWS' }}
        run: |
          cd eks
          terraform init
          terraform ${{ inputs.action }} \
            --var-file=main.tfvars \
            --var="cluster_location=${{ vars.AWS_CLUSTER_LOCATION }}" \
            --var="cluster_machine_type=${{ vars.AWS_CLUSTER_MACHINE_TYPE }}" \

      - name: GKE cluster ${{ inputs.action }}
        if: ${{ inputs.cloud == 'GCP' }}
        run: |
          cd gke
          terraform init
          terraform ${{ inputs.action }} \
            --var-file=main.tfvars \
            --var="project=${{ secrets.GCP_PROJECT }}" \
            --var="cluster_location=${{ vars.GCP_CLUSTER_LOCATION }}" \
            --var="cluster_machine_type=${{ vars.GCP_CLUSTER_MACHINE_TYPE }}" \
            --auto-approve
