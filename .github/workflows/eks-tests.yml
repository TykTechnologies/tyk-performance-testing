name: EKS Tests
on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action'
        required: false
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
      tests_timestamp_enabled:
        description: 'Enabled Timestamp Test'
        required: false
        default: true
        type: boolean
      tests_httpbin_enabled:
        description: 'Enabled Httpbin Test'
        required: false
        default: false
        type: boolean
      tests_duration:
        description: 'Duration of Tests in Minutes'
        required: false
        default: 15
        type: number

jobs:
  performance_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_CLUSTER_LOCATION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Connect to EKS cluster
        run: |
          aws eks --region "${{ vars.AWS_CLUSTER_LOCATION }}" update-kubeconfig --name "pt-${{ vars.AWS_CLUSTER_MACHINE_TYPE }}"

          kubectl config rename-context $(kubectl config current-context) performance-testing-eks

      - name: Create Terraform Cloud descriptor
        run: cp .github/eks/tests ./tests/terraform.cloud.tf

      - name: Run Terraform action on tests
        run: |
          cd tests
          terraform init
          terraform ${{ inputs.action }} \
            --var="kubernetes_config_context=performance-testing-eks" \
            --var="tests_timestamp_enabled=${{ inputs.tests_timestamp_enabled }}" \
            --var="tests_httpbin_enabled=${{ inputs.tests_httpbin_enabled }}" \
            --var="tests_duration=${{ inputs.tests_duration }}" \
            --auto-approve

      - name: Access to Grafana Dashboard
        if: ${{ inputs.action == 'apply' }}
        run: |
          echo "###################################################################
          echo "#
          echo "# http://$(kubectl get svc -n dependencies grafana -ojsonpath='{.status.loadBalancer.ingress[0].ip}')"
          echo "# Username: Admin"
          echo "# Password: topsecretpassword"
          echo "#
          echo "###################################################################
